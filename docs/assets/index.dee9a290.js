import{f as i,s as p,t as u,a as f}from"./vendor.6bf5d223.js";const g=function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))s(t);new MutationObserver(t=>{for(const e of t)if(e.type==="childList")for(const a of e.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function n(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerpolicy&&(e.referrerPolicy=t.referrerpolicy),t.crossorigin==="use-credentials"?e.credentials="include":t.crossorigin==="anonymous"?e.credentials="omit":e.credentials="same-origin",e}function s(t){if(t.ep)return;t.ep=!0;const e=n(t);fetch(t.href,e)}};g();const c=document.querySelector("#map"),l=document.querySelector("#target"),h=document.querySelector("#reset"),m=.05,x=()=>{const o=i(c,"touchstart",{passive:!0}).pipe(p(s=>{const t={x:s.touches[0].pageX,y:s.touches[0].pageY};c.classList.toggle("map__cursor--cross");const e=d(l);return i(c,"touchmove",{passive:!0}).pipe(u(a=>{y({x:e.x+a.touches[0].pageX-t.x,y:e.y+a.touches[0].pageY-t.y},l)}),f(i(c,"touchend",{passive:!0}).pipe(u(()=>c.classList.toggle("map__cursor--cross")))))})),r=i(c,"mousedown").pipe(p(s=>{const t={x:s.offsetX,y:s.offsetY};return c.classList.toggle("map__cursor--cross"),i(c,"mousemove").pipe(u(e=>{const a=d(l);y({x:a.x+e.offsetX-t.x,y:a.y+e.offsetY-t.y},l)}),f(i(c,"mouseup").pipe(u(()=>c.classList.toggle("map__cursor--cross")))))})),n=i(c,"wheel",{passive:!0}).pipe(u(s=>{const t=S(l);v(s.deltaY>0?t+m:t-m,l)}));L()?o.subscribe():r.subscribe(),n.subscribe(),h.addEventListener("click",()=>{l.style.transform=""})},d=o=>{let r=0,n=0;if(o.style.transform){const[s,t]=[...o.style.transform.matchAll(/-?\d+\.?\d*/g)];return{x:+s[0],y:+t[0]}}return{x:r,y:n}},y=(o,r)=>{const n=`translate(${o.x}px, ${o.y}px)`,s=r.style.transform.replace(/translate\(\S+\s\S+\)/,"").trim();r.style.transform=n+" "+s},S=o=>{let r=1;return o.style.transform.indexOf("scale")>=0?+o.style.transform.replace(/translate\(\S+\s\S+\)\s?/,"").match(/\d\.?\d*/)[0]:r},v=(o,r)=>{const n=r.style.transform.replace(/scale\(\d\.?\d*\)/,"").trim(),s=`scale(${o})`;r.style.transform=n+" "+s};function L(){return"ontouchstart"in window||navigator.maxTouchPoints>0||navigator.msMaxTouchPoints>0}x();
